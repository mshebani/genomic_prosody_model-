import streamlit as st
import numpy as np

# خريطة التفعيلات الجينية
rhythm_map = {
    "A": {"symbol": "|0", "weight": 0.9},
    "U": {"symbol": "0|", "weight": 0.5},
    "C": {"symbol": "||", "weight": 1.2},
    "G": {"symbol": "||0", "weight": 1.4}
}

def analyze_codon(codon):
    symbols = []
    total_weight = 0
    for base in codon:
        base = base.upper()
        if base in rhythm_map:
            symbols.append(rhythm_map[base]["symbol"])
            total_weight += rhythm_map[base]["weight"]
        else:
            symbols.append("؟")
    return symbols, round(total_weight, 2)

def split_sequence(seq):
    return [seq[i:i+3] for i in range(0, len(seq), 3) if len(seq[i:i+3]) == 3]

# واجهة المستخدم
st.title("🧬 تحليل عروض جيني لسلسلة RNA كاملة")
st.write("يتم تقسيم السلسلة إلى كودونات وتحليل الوزن العروضي لكل واحدة")

sequence = st.text_area("🔤 أدخل سلسلة RNA (مثال: AUGGCUUAAUGA)", "AUGGCUUAAUGA")

if st.button("🔍 تحليل السلسلة"):
    codons = split_sequence(sequence)
    
    if not codons:
        st.warning("السلسلة غير صالحة أو قصيرة جدًا.")
    else:
        st.markdown("## 🔬 نتائج التحليل:")
        total_weight = 0
        rhythm_sequence = []

        for i, codon in enumerate(codons):
            symbols, weight = analyze_codon(codon)
            total_weight += weight
            rhythm_sequence.append({
                "codon": codon,
                "symbols": " - ".join(symbols),
                "weight": weight
            })

        for i, item in enumerate(rhythm_sequence):
            st.markdown(f"""
            ### 🎼 كودون {i+1} - `{item['codon']}`
            - التفعيلة: `{item['symbols']}`
            - الوزن العروضي: `{item['weight']}`
            """)

        st.markdown(f"## ⚖️ الوزن العروضي الكلي للسلسلة: `{round(total_weight, 2)}` 🎶")

        st.markdown("---")
        st.subheader("🧪 تجربة طفرة على أحد الكودونات")
        index = st.number_input("🔢 اختر رقم الكودون (1 إلى {})".format(len(codons)), min_value=1, max_value=len(codons), step=1)
        new_codon = st.text_input("✍️ أدخل الكودون الطافر البديل", codons[index-1])

        if len(new_codon) == 3:
            _, original_weight = analyze_codon(codons[index-1])
            symbols, new_weight = analyze_codon(new_codon)
            delta = new_weight - original_weight
            direction = "⬆️ زيادة" if delta > 0 else ("⬇️ نقصان" if delta < 0 else "⏸️ ثابت")

            st.markdown(f"""
            ### 🧬 نتيجة الطفرة:
            - الكودون الأصلي: `{codons[index-1]}` → الوزن: `{original_weight}`
            - الكودون الطافر: `{new_codon}` → الوزن: `{new_weight}`
            - 🔁 الفرق: `{round(delta, 2)} ({direction})`
            - التفعيلة الجديدة: `{symbols}`
            """)
        else:
            st.warning("أدخل كودون طافر مكوّن من 3 حروف فقط.")
